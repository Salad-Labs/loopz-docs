"use strict";(self.webpackChunksdk=self.webpackChunksdk||[]).push([[7989],{1931:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"guides/authentication","title":"Authentication Guide","description":"Complete guide to OTP-based authentication in the Loopz SDK","source":"@site/docs/guides/authentication.md","sourceDirName":"guides","slug":"/guides/authentication","permalink":"/loopz-docs/docs/guides/authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/authentication.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"authentication","title":"Authentication Guide","sidebar_label":"Authentication","sidebar_position":1,"keywords":["authentication","OTP","email","phone","SMS","login"],"description":"Complete guide to OTP-based authentication in the Loopz SDK"},"sidebar":"tutorialSidebar","previous":{"title":"Guides","permalink":"/loopz-docs/docs/category/guides"},"next":{"title":"Chat","permalink":"/loopz-docs/docs/guides/chat"}}');var o=t(4848),s=t(8453);const a={id:"authentication",title:"Authentication Guide",sidebar_label:"Authentication",sidebar_position:1,keywords:["authentication","OTP","email","phone","SMS","login"],description:"Complete guide to OTP-based authentication in the Loopz SDK"},r="Authentication Guide",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Authentication Architecture",id:"authentication-architecture",level:2},{value:"Email Authentication Flow",id:"email-authentication-flow",level:2},{value:"Step 1: Initialize Authentication",id:"step-1-initialize-authentication",level:3},{value:"Step 2: Trigger Authentication",id:"step-2-trigger-authentication",level:3},{value:"Step 3: Authentication Modal Flow",id:"step-3-authentication-modal-flow",level:3},{value:"Phone/SMS Authentication",id:"phonesms-authentication",level:2},{value:"Session Management",id:"session-management",level:2},{value:"Automatic Session Persistence",id:"automatic-session-persistence",level:3},{value:"Manual Session Check",id:"manual-session-check",level:3},{value:"Logout",id:"logout",level:3},{value:"Account Information",id:"account-information",level:2},{value:"Post-Authentication Setup",id:"post-authentication-setup",level:2},{value:"Profile Completion",id:"profile-completion",level:3},{value:"Update User Profile",id:"update-user-profile",level:3},{value:"Blockchain Authentication (When Needed)",id:"blockchain-authentication-when-needed",level:2},{value:"Authentication Events",id:"authentication-events",level:2},{value:"Customizing Authentication UI",id:"customizing-authentication-ui",level:2},{value:"Custom Translations",id:"custom-translations",level:3},{value:"Referral Codes",id:"referral-codes",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"authentication-guide",children:"Authentication Guide"})}),"\n",(0,o.jsx)(n.p,{children:"The Loopz SDK uses a custom OTP (One-Time Password) authentication system for accessing the application. This is separate from blockchain wallet connections, which are handled later only when needed for on-chain transactions."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"The Loopz authentication system:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Uses email or SMS-based OTP verification"}),"\n",(0,o.jsx)(n.li,{children:"Does NOT require wallet connection for basic access"}),"\n",(0,o.jsx)(n.li,{children:"Manages user sessions with JWT tokens"}),"\n",(0,o.jsx)(n.li,{children:"Stores encrypted user data locally"}),"\n",(0,o.jsx)(n.li,{children:"Generates E2E encryption keys for secure chat"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"authentication-architecture",children:"Authentication Architecture"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-mermaid",children:"graph TD\n    A[User Enters Email/Phone] --\x3e B[Request OTP Code]\n    B --\x3e C[Backend Sends Code]\n    C --\x3e D[User Enters 6-digit Code]\n    D --\x3e E[Verify Code]\n    E --\x3e F[Backend Validates]\n    F --\x3e G[Generate JWT Token]\n    G --\x3e H[Create User Account]\n    H --\x3e I[Generate E2E Keys]\n    I --\x3e J[User Authenticated]\n\n    K[User Needs to Trade] --\x3e L[Connect Wallet via Privy]\n    L --\x3e M[Execute Blockchain Transaction]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"email-authentication-flow",children:"Email Authentication Flow"}),"\n",(0,o.jsx)(n.h3,{id:"step-1-initialize-authentication",children:"Step 1: Initialize Authentication"}),"\n",(0,o.jsxs)(n.p,{children:["The authentication UI is managed by the ",(0,o.jsx)(n.code,{children:"LoopzAuth"})," component which is automatically included when using ",(0,o.jsx)(n.code,{children:"LoopzProvider"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { LoopzProvider } from "@salad-labs/loopz-typescript"\n\nfunction App() {\n  const loopzConfig = {\n    apiKey: process.env.NEXT_PUBLIC_LOOPZ_API_KEY!,\n    privyAppId: process.env.NEXT_PUBLIC_PRIVY_APP_ID!, // For future blockchain ops\n    privyClientConfig: {\n      // Privy config for when blockchain is needed\n    },\n    intl: {\n      // Customizable text for auth UI\n      titleApp: "My Trading App",\n      emailAddressFieldLabel: "Email Address",\n      buttonSendVerificationLabel: "Send Code",\n      stepVerificationCodeLabel: "Enter Code",\n      successRequestOtpCode: "Code sent successfully!",\n      authSuccess: "Welcome back!",\n    },\n    logoURL: "https://your-app.com/logo.png",\n    tosURL: "https://your-app.com/terms",\n    privacyURL: "https://your-app.com/privacy",\n  }\n\n  return (\n    <LoopzProvider config={loopzConfig}>\n      <YourApp />\n    </LoopzProvider>\n  )\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-2-trigger-authentication",children:"Step 2: Trigger Authentication"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { useLoopzAuth } from "@salad-labs/loopz-typescript"\n\nfunction LoginButton() {\n  const { authenticate, isAuthenticated, account } = useLoopzAuth()\n\n  const handleLogin = async () => {\n    try {\n      // This opens the OTP modal\n      const { auth, account } = await authenticate()\n\n      console.log("Logged in user:", account.email)\n      console.log("User DID:", account.did)\n      console.log("JWT Token stored")\n    } catch (error) {\n      if (error.error === "user_exit_auth_flow") {\n        console.log("User closed the auth modal")\n      } else {\n        console.error("Authentication failed:", error)\n      }\n    }\n  }\n\n  if (isAuthenticated) {\n    return <div>Welcome, {account?.email}</div>\n  }\n\n  return <button onClick={handleLogin}>Login with Email</button>\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"step-3-authentication-modal-flow",children:"Step 3: Authentication Modal Flow"}),"\n",(0,o.jsxs)(n.p,{children:["When ",(0,o.jsx)(n.code,{children:"authenticate()"})," is called:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Email Input"}),": User enters their email address"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Send OTP"}),": Backend sends a 6-digit code via email"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Code Verification"}),": User enters the code"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Success"}),": JWT token is stored, user is authenticated"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The entire flow is handled by the built-in UI component."}),"\n",(0,o.jsx)(n.h2,{id:"phonesms-authentication",children:"Phone/SMS Authentication"}),"\n",(0,o.jsx)(n.p,{children:"For SMS authentication, you need to implement custom handlers:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'function PhoneAuthExample() {\n  const { sendPhoneOTPCode, authenticate } = useLoopzAuth()\n  const [phone, setPhone] = useState("")\n\n  // Note: The current SDK expects these handlers to be provided\n  // via LoopzAuthProvider configuration\n\n  return (\n    <LoopzProvider\n      config={loopzConfig}\n      authConfig={{\n        onSendPhoneOTPCode: async (phone: string) => {\n          // Implement your SMS sending logic\n          const response = await fetch("/api/send-sms", {\n            method: "POST",\n            body: JSON.stringify({ phone }),\n          })\n          return response.json()\n        },\n        onSendPhoneOTPCodeAfterAuth: async (phone: string) => {\n          // For adding phone after initial auth\n        },\n      }}\n    >\n      <YourApp />\n    </LoopzProvider>\n  )\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"session-management",children:"Session Management"}),"\n",(0,o.jsx)(n.h3,{id:"automatic-session-persistence",children:"Automatic Session Persistence"}),"\n",(0,o.jsx)(n.p,{children:"Sessions are automatically restored on page refresh:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'function App() {\n  const { isAuthenticated, isLoading, account } = useLoopzAuth()\n\n  useEffect(() => {\n    if (!isLoading && isAuthenticated) {\n      console.log("Session restored for:", account?.email)\n    }\n  }, [isLoading, isAuthenticated])\n\n  if (isLoading) {\n    return <div>Checking authentication...</div>\n  }\n\n  return isAuthenticated ? <AuthenticatedApp /> : <LoginScreen />\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"manual-session-check",children:"Manual Session Check"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { Auth } from "@salad-labs/loopz-typescript"\n\n// Check if user is authenticated\nconst auth = Auth.getInstance()\nconst isAuthenticated = auth.isAuthenticated()\nconst account = auth.getCurrentAccount()\n'})}),"\n",(0,o.jsx)(n.h3,{id:"logout",children:"Logout"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"function LogoutButton() {\n  const { logout } = useLoopzAuth()\n\n  const handleLogout = async () => {\n    await logout()\n    // This will:\n    // - Clear JWT tokens\n    // - Remove local user data\n    // - Disconnect chat\n    // - Reset authentication state\n  }\n\n  return <button onClick={handleLogout}>Logout</button>\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"account-information",children:"Account Information"}),"\n",(0,o.jsx)(n.p,{children:"After authentication, you can access user information:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'function UserProfile() {\n  const { account } = useLoopzAuth()\n\n  if (!account) return null\n\n  return (\n    <div>\n      <p>Email: {account.email}</p>\n      <p>User ID: {account.did}</p>\n      <p>Username: {account.username || "Not set"}</p>\n      <p>First Login: {account.firstLogin ? "Yes" : "No"}</p>\n      <p>Profile Complete: {account.signupCompleted ? "Yes" : "No"}</p>\n\n      {/* E2E Encryption Status */}\n      <p>Can Use Chat: {account.e2ePublicKey ? "Yes" : "No"}</p>\n    </div>\n  )\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"post-authentication-setup",children:"Post-Authentication Setup"}),"\n",(0,o.jsx)(n.h3,{id:"profile-completion",children:"Profile Completion"}),"\n",(0,o.jsx)(n.p,{children:"Check if the user needs to complete their profile:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'function useProfileCompletion() {\n  const { account, isAuthenticated } = useLoopzAuth()\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (isAuthenticated && account) {\n      if (!account.signupCompleted || !account.username) {\n        navigate("/complete-profile")\n      }\n    }\n  }, [isAuthenticated, account])\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"update-user-profile",children:"Update User Profile"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'async function updateProfile() {\n  const { account } = useLoopzAuth()\n\n  try {\n    await account?.updateData({\n      username: "CoolTrader123",\n      bio: "NFT enthusiast",\n      avatarFile: avatarFile, // File object\n      city: "New York",\n      country: "USA",\n      signupCompleted: true,\n    })\n\n    console.log("Profile updated successfully")\n  } catch (error) {\n    console.error("Profile update failed:", error)\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"blockchain-authentication-when-needed",children:"Blockchain Authentication (When Needed)"}),"\n",(0,o.jsx)(n.p,{children:"Wallet connection via Privy is only required when performing blockchain operations:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'function CreateOrder() {\n  const { account } = useLoopzAuth()\n  const { instance } = useLoopz()\n\n  const handleCreateOrder = async () => {\n    try {\n      // This is when Privy comes into play\n      // The SDK will automatically prompt for wallet connection\n      const wallet = await account?.getActiveWallets()[0]\n\n      if (!wallet) {\n        // Privy modal will appear to connect wallet\n        console.log("Please connect your wallet")\n        return\n      }\n\n      // Now you can create orders\n      const order = await instance.order.create(\n        wallet\n        // ... order parameters\n      )\n    } catch (error) {\n      console.error("Order creation failed:", error)\n    }\n  }\n\n  return (\n    <button onClick={handleCreateOrder}>Create Order (Requires Wallet)</button>\n  )\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"authentication-events",children:"Authentication Events"}),"\n",(0,o.jsx)(n.p,{children:"Listen to authentication events:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'useEffect(() => {\n  const auth = Auth.getInstance()\n\n  // Authentication successful\n  auth.on("auth", () => {\n    console.log("User authenticated successfully")\n  })\n\n  // Authentication error\n  auth.on("onAuthError", (error) => {\n    console.error("Authentication error:", error)\n  })\n\n  // User logged out\n  auth.on("logout", () => {\n    console.log("User logged out")\n    // Clean up user data\n  })\n\n  // Cleanup\n  return () => {\n    auth.off("auth")\n    auth.off("onAuthError")\n    auth.off("logout")\n  }\n}, [])\n'})}),"\n",(0,o.jsx)(n.h2,{id:"customizing-authentication-ui",children:"Customizing Authentication UI"}),"\n",(0,o.jsx)(n.h3,{id:"custom-translations",children:"Custom Translations"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const customIntl = {\n  titleApp: 'Welcome to NFT Trader',\n  emailAddressFieldLabel: 'Your Email',\n  buttonSendVerificationLabel: 'Get Access Code',\n  stepVerificationCodeLabel: 'Verify Your Code',\n  stepVerificationCodeDescriptionLabel: 'Check your email for a 6-digit code',\n  sixDigitDescriptionLabel: 'Enter the code sent to',\n  backLabel: 'Go Back',\n  buttonVerifyingCodeLabel: 'Verifying...',\n  buttonVerifyCodeLabel: 'Confirm Code',\n  resendVerificationCodeLabel: 'Send New Code',\n  successRequestOtpCode: 'Code sent! Check your email',\n  authSuccess: 'Welcome aboard!',\n  failedSendRequestOtpCode: 'Could not send code. Try again.',\n  invalidOtpCode: 'Invalid code. Please check and try again.',\n  networkError: 'Connection issue. Please try again.'\n}\n\n<LoopzProvider\n  config={{\n    ...config,\n    intl: customIntl\n  }}\n>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"referral-codes",children:"Referral Codes"}),"\n",(0,o.jsx)(n.p,{children:"The SDK automatically detects referral codes from URL parameters:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"https://your-app.com?code=REFER123\n"})}),"\n",(0,o.jsx)(n.p,{children:"This referral code will be included in the authentication process."}),"\n",(0,o.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"JWT Token Storage"}),": Tokens are stored in localStorage with automatic expiration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Token Refresh"}),": Tokens are automatically refreshed before expiration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"E2E Encryption"}),": Chat keys are generated after authentication"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Session Security"}),": Sessions expire after 18 hours of inactivity"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"OTP Security"}),": Codes expire after 5 minutes"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:'"Network error" during OTP request'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check your API key configuration"}),"\n",(0,o.jsx)(n.li,{children:"Ensure backend is accessible"}),"\n",(0,o.jsx)(n.li,{children:"Verify CORS settings"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:'"Invalid code" error'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Codes expire after 5 minutes"}),"\n",(0,o.jsx)(n.li,{children:"Ensure you're entering the latest code"}),"\n",(0,o.jsx)(n.li,{children:"Check for typos in the 6-digit code"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Session not persisting"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check if localStorage is enabled"}),"\n",(0,o.jsx)(n.li,{children:"Verify token is not expired"}),"\n",(0,o.jsx)(n.li,{children:"Check for localStorage clearing"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Wallet connection issues"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"These only occur during blockchain operations"}),"\n",(0,o.jsx)(n.li,{children:"Ensure Privy is properly configured"}),"\n",(0,o.jsx)(n.li,{children:"Check wallet extension is installed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Explore ",(0,o.jsx)(n.a,{href:"/loopz-docs/docs/guides/chat",children:"Chat Features"})," for encrypted messaging"]}),"\n",(0,o.jsxs)(n.li,{children:["Learn about ",(0,o.jsx)(n.a,{href:"/loopz-docs/docs/guides/trading",children:"Trading"})," (requires wallet connection)"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);